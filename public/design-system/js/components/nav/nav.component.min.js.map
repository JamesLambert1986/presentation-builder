{"version":3,"file":"nav.component.min.js","sources":["nav.component.js"],"sourcesContent":["// @ts-nocheck\n// Data layer Web component created\nwindow.dataLayer = window.dataLayer || [];\nwindow.dataLayer.push({\n    \"event\": \"customElementRegistered\",\n    \"element\": \"nav\"\n});\nclass iamNav extends HTMLElement {\n    constructor() {\n        super();\n        const shadowRoot = this.attachShadow({ mode: 'open' });\n        const assetLocation = document.body.hasAttribute('data-assets-location') ? document.body.getAttribute('data-assets-location') : '/assets';\n        const coreCSS = document.body.hasAttribute('data-core-css') ? document.body.getAttribute('data-core-css') : `${assetLocation}/css/core.min.css`;\n        const loadCSS = `@import \"${assetLocation}/css/components/nav.css\";`;\n        const loadExtraCSS = `@import \"${assetLocation}/css/components/nav.global.css\";`;\n        const template = document.createElement('template');\n        template.innerHTML = `\r\n    <style class=\"styles\">\r\n    @import \"${coreCSS}\";\r\n    ${loadCSS}\r\n    </style>\r\n    <style class=\"doc-styles\">\r\n    </style>\r\n    <link rel=\"stylesheet\" href=\"https://kit.fontawesome.com/26fdbf0179.css\" crossorigin=\"anonymous\">\r\n    <div class=\"container\">\r\n      <slot name=\"logo\"></slot>\r\n      <div class=\"buttons-holder\"></div>\r\n      <button class=\"btn-menu\" part=\"btn-menu\">Menu<i class=\"fa-regular fa-bars\"></i><i class=\"fa-regular fa-xmark-large\"></i></button>\r\n\r\n      <div class=\"menu__outer\">\r\n        <div class=\"menu closed\">\r\n            \r\n          <div class=\"menu__primary\">\r\n            <slot></slot>\r\n            <slot name=\"dual\"></slot>\r\n          </div>\r\n          <div class=\"dialog__wrapper d-none\" id=\"search-wrapper\"></div>\r\n          <slot name=\"actions\"></slot>\r\n          <div class=\"menu__secondary\">\r\n            <div class=\"container\">\r\n            <slot name=\"secondary\"></slot>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <slot name=\"menus\"></slot>\r\n      </div>      \r\n    </div>\r\n    <div class=\"backdrop\" part=\"backdrop\"></div>\r\n    `;\n        shadowRoot.appendChild(template.content.cloneNode(true));\n        // insert extra CSS\n        if (!document.getElementById('navGlobal'))\n            document.head.insertAdjacentHTML('beforeend', `<style id=\"navGlobal\">${loadExtraCSS}</style>`);\n    }\n    connectedCallback() {\n        // Load external CSS if needed\n        if (this.hasAttribute('data-css'))\n            this.shadowRoot.querySelector('.doc-styles').insertAdjacentHTML('beforeend', `@import \"${this.getAttribute('data-css')}\";`);\n        const menuButton = this.shadowRoot.querySelector('.btn-menu');\n        const menu = this.shadowRoot.querySelector('.menu');\n        const iamNav = this;\n        const backdrop = this.shadowRoot.querySelector('.backdrop');\n        const buttonsHolder = this.shadowRoot.querySelector('.buttons-holder');\n        // Check the content \n        this.querySelectorAll(':scope > *').forEach(function (element) {\n            let tagname = element.tagName;\n            switch (tagname) {\n                case \"BUTTON\":\n                    if (!element.hasAttribute('slot')) {\n                        element.setAttribute('slot', 'actions');\n                        menu.classList.add('has-actions');\n                    }\n                    break;\n            }\n            // Create menu button\n            if (element.classList.contains('nav--menu') && element.hasAttribute('data-title') && element.hasAttribute('data-icon')) {\n                const title = element.getAttribute('data-title');\n                const iconClass = element.getAttribute('data-icon');\n                // Create the menu button that sits seperately to the menu\n                const button = document.createElement('button');\n                button.setAttribute('slot', title);\n                button.classList.add('btn-menu');\n                button.setAttribute('part', 'btn-menu');\n                button.innerHTML = `<span class=\"btn btn-primary\"><span>${title}</span><i class=\"${iconClass}\"></i><i class=\"fa-regular fa-xmark-large\"></i></span>`;\n                buttonsHolder.insertAdjacentElement('beforeend', button);\n                const mdButton = button.querySelector('.btn-primary');\n                // Make sure the menu is added to the right part of the component\n                element.setAttribute('slot', 'menus');\n                // If open we need to make sure the main mobile menu is closed, the new button has the right state and the backdrop is shown\n                if (element.classList.contains('open')) {\n                    button.setAttribute('aria-expanded', true);\n                    mdButton.classList.toggle('active');\n                    iamNav.classList.add('open');\n                    backdrop.classList.add('show');\n                }\n                else {\n                    element.classList.add('closed'); // closed class is added to prevent the elements being tabbed into, this causes visual issues\n                }\n                // Click event\n                button.addEventListener('click', function (e) {\n                    e.preventDefault();\n                    button.toggleAttribute('aria-expanded');\n                    element.classList.toggle('open');\n                    mdButton.classList.toggle('active');\n                    // Close desktop menus\n                    let openMenu = iamNav.querySelector(':scope > details[open]');\n                    if (openMenu)\n                        openMenu.removeAttribute('open');\n                    // Close the main menu and fix states on the button, iamNav component and backdrop\n                    if (element.classList.contains('open')) {\n                        menu.classList.remove('open');\n                        menuButton.removeAttribute('aria-expanded');\n                        setTimeout(function () { menu.classList.add('closed'); }, 1000); // Delay until its close so the animation is broken\n                        iamNav.classList.add('open');\n                        backdrop.classList.add('show');\n                        element.classList.remove('closed');\n                    }\n                    else {\n                        iamNav.classList.remove('open');\n                        backdrop.classList.remove('show');\n                        setTimeout(function () { element.classList.add('closed'); }, 1000);\n                    }\n                    // Close any open menus\n                    iamNav.querySelectorAll('.nav--menu.open').forEach(function (openmenu) {\n                        if (openmenu != element) {\n                            openmenu.classList.remove('open');\n                        }\n                    });\n                    iamNav.shadowRoot.querySelectorAll('.buttons-holder .btn-menu[aria-expanded]').forEach(function (selectedButton) {\n                        if (selectedButton != button) {\n                            selectedButton.removeAttribute('aria-expanded');\n                            let innerBtn = selectedButton.querySelector('.btn-primary');\n                            innerBtn.classList.remove('active');\n                        }\n                    });\n                }, false);\n            }\n        });\n        this.querySelectorAll('details').forEach(function (element) {\n            element.classList.add('details--revert');\n        });\n        // Has secondary link\n        if (this.querySelector('a[slot=\"secondary\"]')) {\n            menu.classList.add('has-secondary');\n        }\n        // Create a scroll width variable to help with the sizing of the menu with in the CSS\n        document.documentElement.style.setProperty('--scrollbar-width', (window.innerWidth - document.documentElement.offsetWidth) + 'px');\n        // Open and close the menu\n        menuButton.addEventListener('click', function (e) {\n            e.preventDefault();\n            menuButton.toggleAttribute('aria-expanded');\n            menu.classList.toggle('open');\n            // Close any other menus\n            iamNav.querySelectorAll('.nav--menu.open').forEach(function (element) {\n                element.classList.remove('open');\n                setTimeout(function () { element.classList.add('closed'); }, 1000);\n            });\n            iamNav.shadowRoot.querySelectorAll('.buttons-holder .btn-menu[aria-expanded]').forEach(function (element) {\n                element.removeAttribute('aria-expanded');\n                let innerBtn = element.querySelector('.btn-primary');\n                innerBtn.classList.remove('active');\n            });\n            if (menu.classList.contains('open')) {\n                iamNav.classList.add('open');\n                menu.classList.remove('closed');\n            }\n            else {\n                iamNav.classList.remove('open');\n                setTimeout(function () { menu.classList.add('closed'); }, 1000);\n            }\n        }, false);\n        // Allow outside JS to close the menu\n        this.addEventListener(\"request-close\", (event) => {\n            menuButton.removeAttribute('aria-expanded');\n            menu.classList.remove('open');\n            iamNav.classList.remove('open');\n        });\n        // Close the menu on the click of the backdrop on desktop\n        backdrop.addEventListener(\"click\", (event) => {\n            let openMenu = this.querySelector('details[open] summary');\n            if (openMenu)\n                openMenu.click();\n            iamNav.querySelectorAll('.nav--menu.open').forEach(function (element) {\n                element.classList.remove('open');\n            });\n            iamNav.shadowRoot.querySelectorAll('.buttons-holder .btn-menu[aria-expanded]').forEach(function (element) {\n                element.removeAttribute('aria-expanded');\n                let innerBtn = element.querySelector('.btn-primary');\n                innerBtn.classList.remove('active');\n            });\n            backdrop.classList.remove('show');\n        });\n        // On desktop close other menu's (details) when one is clicked\n        this.addEventListener(\"click\", (event) => {\n            if (event && event.target instanceof HTMLElement && event.target.closest('summary')) {\n                if (window.innerWidth > 992 && !event.target.closest('.nav--menu')) {\n                    let summary = event.target.closest('summary');\n                    let details = summary.closest('details');\n                    let wrapper = details.parentNode;\n                    if (details.hasAttribute('open'))\n                        details.removeAttribute('open');\n                    else\n                        details.setAttribute('open', 'true');\n                    // Close any bespoke menus\n                    iamNav.querySelectorAll('.nav--menu.open').forEach(function (element) {\n                        element.classList.remove('open');\n                        setTimeout(function () { menu.classList.add('closed'); }, 1000);\n                    });\n                    iamNav.shadowRoot.querySelectorAll('.buttons-holder .btn-menu[aria-expanded]').forEach(function (element) {\n                        element.removeAttribute('aria-expanded');\n                        let innerBtn = element.querySelector('.btn-primary');\n                        innerBtn.classList.remove('active');\n                    });\n                    // Close any other dropdowns on the same level\n                    Array.from(wrapper.querySelectorAll(':scope > details')).forEach((detailsArrayElement, index) => {\n                        if (detailsArrayElement != details)\n                            detailsArrayElement.removeAttribute('open');\n                    });\n                    if (this.querySelectorAll(':scope > details[open]').length) {\n                        backdrop.classList.add('show');\n                        iamNav.classList.add('open');\n                    }\n                    else {\n                        backdrop.classList.remove('show');\n                        iamNav.classList.remove('open');\n                    }\n                    event.preventDefault();\n                }\n            }\n            ;\n        });\n        // Mega menu title\n        this.querySelectorAll('details').forEach((detailsElement) => {\n            let summary = detailsElement.querySelector('summary');\n            let containerDiv = detailsElement.querySelector(':Scope > div');\n            containerDiv.setAttribute('data-title', summary.textContent);\n        });\n        // Search \n        if (this.querySelector('[slot=\"search\"]')) {\n            menu.classList.add('has-search');\n            let searchWrapper = this.shadowRoot.querySelector('#search-wrapper');\n            searchWrapper.classList.remove('d-none');\n            searchWrapper.insertAdjacentHTML('afterbegin', `<button class=\"btn btn-secondary btn-compact fa-search me-0 mb-0\" id=\"search-button\" aria-controls=\"search-dialog\">Open Search field</button>\r\n      <dialog id=\"search-dialog\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col mb-0 ms-auto col-md-7\">\r\n            <slot name=\"search\"></slot>\r\n          </div>\r\n          <div class=\"col d-none d-md-block mw-fit-content ms-3\">\r\n            <button class=\"btn btn-compact btn-secondary fa-xmark-large m-0 mb-0\" type=\"button\" id=\"search-close\">Close search field</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </dialog>`);\n            let searchButton = this.shadowRoot.querySelector('#search-button');\n            let searchClose = this.shadowRoot.querySelector('#search-close');\n            let searchDialog = this.shadowRoot.querySelector('#search-dialog');\n            if (this.hasAttribute('data-search-open')) {\n                searchDialog.setAttribute('open', 'open');\n                this.classList.add('search-open');\n                searchButton.setAttribute('aria-expanded', true);\n            }\n            searchButton.addEventListener(\"click\", (event) => {\n                searchDialog.setAttribute('open', 'open');\n                this.classList.add('search-open');\n                searchButton.setAttribute('aria-expanded', true);\n            });\n            searchClose.addEventListener(\"click\", (event) => {\n                searchDialog.removeAttribute('open');\n                this.classList.remove('search-open');\n                searchButton.removeAttribute('aria-expanded');\n            });\n        }\n    }\n}\nexport default iamNav;\n"],"names":["iamNav","shadowRoot","assetLocation","coreCSS","template","menuButton","menu","backdrop","buttonsHolder","element","title","iconClass","button","mdButton","e","openMenu","openmenu","selectedButton","event","details","wrapper","detailsArrayElement","index","detailsElement","summary","searchWrapper","searchButton","searchClose","searchDialog"],"mappings":"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"}