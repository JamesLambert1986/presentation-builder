{"version":3,"file":"fileupload.component.min.js","sources":["../../modules/fileupload.js","fileupload.component.js"],"sourcesContent":["// @ts-nocheck\nfunction fileupload(fileupload, wrapper) {\n    const filesWrapper = wrapper.querySelector('.files');\n    const dropArea = wrapper.querySelector('.drop-area');\n    const input = fileupload.querySelector('input');\n    const maxSize = fileupload.hasAttribute('data-maxsize') ? fileupload.getAttribute('data-maxsize') : 0;\n    // We clone the input field to work as a buffer input field, this allows us to add new files without losing the old ones\n    const cloneInput = input.cloneNode();\n    dropArea.append(cloneInput);\n    wrapper.addEventListener('click', (event) => {\n        if (event && event.target instanceof HTMLElement && event.target.closest('.btn-primary')) {\n            const button = event.target.closest('.btn-primary');\n            // If the input allows multiples then use the buffer clone input\n            const inputTrigger = input.hasAttribute('multiple') ? cloneInput : input;\n            inputTrigger.click();\n        }\n    });\n    wrapper.addEventListener('click', (event) => {\n        if (event && event.target instanceof HTMLElement && event.target.closest('.files button')) {\n            const dt = new DataTransfer();\n            const { files } = input;\n            const button = event.target.closest('.files button');\n            for (let i = 0; i < files.length; i++) {\n                const file = files[i];\n                if (file.name != button.getAttribute('data-file'))\n                    dt.items.add(file); // here you exclude the file. thus removing it.\n            }\n            input.files = dt.files; // Assign the updates list\n            const changeEvent = new Event('change');\n            input.dispatchEvent(changeEvent);\n        }\n    });\n    // Buffer input change event\n    cloneInput.addEventListener('change', (event) => {\n        if (input.hasAttribute('multiple')) {\n            const filesArray = [...input.files, ...cloneInput.files];\n            let fileNames = [];\n            const dt = new DataTransfer();\n            for (let i = 0; i < filesArray.length; i++) {\n                const file = filesArray[i];\n                const size = file.size / 1000;\n                if (!fileNames.includes(file.name) && (maxSize == 0 || size < maxSize))\n                    dt.items.add(file); // here you exclude the file. thus removing it.\n                fileNames.push(file.name);\n            }\n            input.files = dt.files;\n        }\n        else {\n            input.files = cloneInput.files;\n        }\n        const changeEvent = new Event('change');\n        input.dispatchEvent(changeEvent);\n    });\n    cloneInput.addEventListener('dragenter', (event) => {\n        cloneInput.classList.add('focus');\n    });\n    cloneInput.addEventListener('dragleave', (event) => {\n        cloneInput.classList.remove('focus');\n    });\n    cloneInput.addEventListener('drop', (event) => {\n        cloneInput.classList.remove('focus');\n    });\n    input.addEventListener('change', (event) => {\n        // Reset\n        filesWrapper.innerHTML = '';\n        for (const file of input.files)\n            filesWrapper.innerHTML += `<span class=\"file\">${file.name} <button data-file=\"${file.name}\">Remove</button></span>`;\n    });\n}\nexport default fileupload;\n","// @ts-nocheck\nimport fileupload from \"../../modules/fileupload.js\";\n// Data layer Web component created\nwindow.dataLayer = window.dataLayer || [];\nwindow.dataLayer.push({\n    \"event\": \"customElementRegistered\",\n    \"element\": \"fileupload\"\n});\nclass iamFileupload extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        const assetLocation = document.body.hasAttribute('data-assets-location') ? document.body.getAttribute('data-assets-location') : '/assets';\n        const coreCSS = document.body.hasAttribute('data-core-css') ? document.body.getAttribute('data-core-css') : `${assetLocation}/css/core.min.css`;\n        const loadCSS = `@import \"${assetLocation}/css/components/fileupload.css\";`;\n        const template = document.createElement('template');\n        template.innerHTML = `\r\n    <style>\r\n    @import \"${coreCSS}\";\r\n    ${loadCSS}\r\n    ${this.hasAttribute('css') ? `@import \"${this.getAttribute('css')}\";` : ``}\r\n    </style>\r\n    <div class=\"file-upload\">\r\n      <span class=\"file-upload__title\">Upload file</span>\r\n      <p class=\"helper-text\"></p>\r\n      <button class=\"btn btn-primary\"><slot name=\"btn\"></slot> Upload document</button>\r\n      <div class=\"drop-area\"></div>\r\n      <hr/>\r\n      <slot></slot>\r\n      <div class=\"files\"></div>\r\n    </div>\r\n    `;\n        this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n    connectedCallback() {\n        this.innerHTML += '<i class=\"fa-regular fa-arrow-up-from-bracket me-2\" aria-hidden=\"true\" slot=\"btn\"></i>';\n        const wrapper = this.shadowRoot.querySelector('.file-upload');\n        const input = this.querySelector('input');\n        const helperText = this.shadowRoot.querySelector('.helper-text');\n        helperText.innerHTML = `${this.hasAttribute('data-maxsize') ? `Max file size is ${this.getAttribute('data-maxsize')}kb. ` : ''}${input.hasAttribute('accept') ? `Supported file types are ${input.getAttribute('accept')}` : ''}`;\n        fileupload(this, wrapper);\n    }\n}\nexport default iamFileupload;\n"],"names":["fileupload","wrapper","filesWrapper","dropArea","input","maxSize","cloneInput","event","dt","files","button","i","file","changeEvent","filesArray","fileNames","size","iamFileupload","assetLocation","coreCSS","template","helperText"],"mappings":"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"}