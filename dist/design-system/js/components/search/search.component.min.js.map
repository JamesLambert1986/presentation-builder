{"version":3,"file":"search.component.min.js","sources":["../../modules/helpers.js","search.component.js"],"sourcesContent":["// @ts-nocheck\n/**\n * Global helper functions to help maintain and enhance framework elements.\n * @module Helpers\n */\n/**\n * Add global classes used by the CSS and later JavaScript.\n * @param {HTMLElement} body Dom element, this doesn't have to be the body but it is recommended.\n */\nexport const addBodyClasses = (body) => {\n    body.classList.add(\"js-enabled\");\n    if (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') > 0) {\n        body.classList.add(\"ie\");\n    }\n    return null;\n};\n/**\n * Add global events.\n * @param {HTMLElement} body Dom element, this doesn't have to be the body but it is recommended.\n */\nexport const addGlobalEvents = (body) => {\n    const checkElements = function (hash) {\n        const label = document.querySelector(`label[for=\"${hash.replace('#', '')}\"]`);\n        const summary = document.querySelector(hash + ' summary');\n        const dialog = document.querySelector(`dialog${hash}`);\n        const detail = document.querySelector(`detail${hash}`);\n        if (label instanceof HTMLElement)\n            label.click();\n        else if (summary instanceof HTMLElement)\n            summary.click();\n        else if (dialog instanceof HTMLElement)\n            dialog.showModal();\n        else if (detail instanceof HTMLElement)\n            detail.addAttribute('open');\n    };\n    if (location.hash)\n        checkElements(location.hash);\n    window.addEventListener('hashchange', function () { checkElements(location.hash); }, false);\n    addEventListener(\"popstate\", (event) => {\n        if (event && event.state && event.state.type && event.state.type == \"pagination\") {\n            let form = document.querySelector(`#${event.state.form}`);\n            let pageInput = document.querySelector(`#${event.state.form} [data-pagination]`);\n            if (pageInput)\n                pageInput.value = event.state.page;\n            else\n                form.innerHTML += `<input name=\"page\" type=\"hidden\" data-pagination=\"true\" value=\"${event.state.page}\" />`;\n            form.dispatchEvent(new Event(\"submit\"));\n        }\n    });\n    document.addEventListener(\"submit\", (event) => {\n        if (event && event.target instanceof HTMLElement && event.target.matches('form')) {\n            let form = event.target;\n            // Reset password types\n            Array.from(form.querySelectorAll('[data-password-type]')).forEach((input, index) => {\n                input.setAttribute('type', 'password');\n            });\n            if (form.querySelector(':invalid') || form.querySelector('.pwd-checker[data-strength=\"1\"]') || form.querySelector('.pwd-checker[data-strength=\"2\"]')) {\n                form.classList.add('was-validated');\n                event.preventDefault();\n            }\n        }\n    });\n    document.addEventListener(\"keydown\", (e) => {\n        if (e.key === \"Escape\") {\n            if (document.querySelector('.dialog--transactional[open], .dialog--acknowledgement[open]')) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    });\n    return null;\n};\nexport const isNumeric = function (str) {\n    if (typeof str != \"string\")\n        return false; // we only process strings!  \n    return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n        !isNaN(parseFloat(str)); // ...and ensure strings of whitespace fail\n};\nexport const zeroPad = (num, places) => String(num).padStart(places, '0');\nexport const ucfirst = (str) => str.charAt(0).toUpperCase() + str.slice(1);\nexport const ucwords = (str) => str.split(' ').map(s => ucfirst(s)).join(' ');\nexport const unsnake = (str) => str.replace(/_/g, ' ');\nexport const snake = (str) => str.replace(/ /g, '_');\nexport const safeID = function (str) {\n    str = str.toLowerCase();\n    str = snake(str);\n    str = str.replace(/\\W/g, '');\n    return str;\n};\n// Used to get values from nested json objects\nexport const resolvePath = (object, path, defaultValue) => path.split(/[\\.\\[\\]\\'\\\"]/).filter(p => p).reduce((o, p) => o ? o[p] : defaultValue, object);\nexport const isTraversable = o => Array.isArray(o) || o !== null && ['function', 'object'].includes(typeof o);\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// @ts-nocheck\nimport Cookies from 'js-cookie';\nimport { safeID, resolvePath, isTraversable } from '../../modules/helpers.js';\n// Data layer Web component created\nwindow.dataLayer = window.dataLayer || [];\nwindow.dataLayer.push({\n    \"event\": \"customElementRegistered\",\n    \"element\": \"Search\"\n});\nclass iamSearch extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        const assetLocation = document.body.hasAttribute('data-assets-location') ? document.body.getAttribute('data-assets-location') : '/assets';\n        const coreCSS = document.body.hasAttribute('data-core-css') ? document.body.getAttribute('data-core-css') : `${assetLocation}/css/core.min.css`;\n        const template = document.createElement('template');\n        template.innerHTML = `\r\n    <style>\r\n    @import \"${coreCSS}\";\r\n    input {\r\n      background: red;\r\n    }\r\n    input:not(.is-invalid):not(:invalid) {\r\n      background: none!important;\r\n    }\r\n    .optional-text {\r\n      display: none;\r\n    }\r\n    </style>\r\n    <link rel=\"stylesheet\" href=\"https://kit.fontawesome.com/26fdbf0179.css\" crossorigin=\"anonymous\" />\r\n    <slot></slot>\r\n    `;\n        this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n    connectedCallback() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const searchWrapper = this;\n            const inputField = this.querySelector('input');\n            const valueSchema = this.hasAttribute('data-value-schema') ? this.getAttribute('data-value-schema') : 'value';\n            const displaySchema = this.hasAttribute('data-display-schema') ? this.getAttribute('data-display-schema') : 'label';\n            const loopSchema = this.hasAttribute('data-schema') ? this.getAttribute('data-schema') : '';\n            let datalist = this.querySelector('datalist');\n            let searched = [];\n            // Clone original input field, re-name and use for display purposes\n            const displayInputField = inputField.cloneNode();\n            displayInputField.setAttribute('name', `${inputField.getAttribute('name')}Alt`);\n            inputField.removeAttribute('data-change-events');\n            displayInputField.removeAttribute('id');\n            inputField.after(displayInputField);\n            // Hide original input field\n            inputField.setAttribute('type', 'hidden');\n            // if data list does not exist then create one and append\n            if (!datalist) {\n                datalist = document.createElement(\"datalist\");\n                let listID = safeID('list');\n                datalist.setAttribute('id', listID);\n                searchWrapper.appendChild(datalist);\n                displayInputField.setAttribute('list', listID);\n            }\n            // Search the endpoint when 3 characters has been added\n            if (searchWrapper.hasAttribute('data-url')) {\n                displayInputField.addEventListener('input', (event) => {\n                    if (displayInputField.value.length == 3 && !searched.includes(displayInputField.value)) {\n                        search(displayInputField.value);\n                        searched.push(displayInputField.value);\n                    }\n                });\n            }\n            function checkMatch() {\n                let match = datalist.querySelector(`option[value=\"${displayInputField.value}\"]`);\n                let subMatch = datalist.querySelector(`option[value*=\"${displayInputField.value}\" i]`);\n                if (match) {\n                    inputField.value = match.getAttribute('data-value');\n                }\n                else if (displayInputField.value.length > 0 && !subMatch) {\n                    displayInputField.classList.add('is-invalid');\n                    displayInputField.closest('label').setAttribute('data-error', 'No results returned');\n                }\n                else {\n                    displayInputField.classList.remove('is-invalid');\n                    displayInputField.closest('label').removeAttribute('data-error');\n                }\n            }\n            // on change update oringinal field with the actual value and use displayed input for the nice display text\n            displayInputField.addEventListener('input', (event) => {\n                checkMatch();\n            });\n            const search = (searchterm) => __awaiter(this, void 0, void 0, function* () {\n                let ajaxURL = searchWrapper.getAttribute('data-url');\n                ajaxURL += `${encodeURI(searchterm)}`;\n                // Setup controller vars if not already set\n                if (!window.controller)\n                    window.controller = [];\n                // Abort if controller already present for this url\n                if (window.controller[ajaxURL])\n                    window.controller[ajaxURL].abort();\n                // Create a new controller so it can be aborted if new fetch made\n                window.controller[ajaxURL] = new AbortController();\n                const { signal } = controller[ajaxURL];\n                try {\n                    yield fetch(ajaxURL, {\n                        signal: signal,\n                        method: 'get',\n                        credentials: 'same-origin',\n                        headers: new Headers({\n                            'Content-Type': 'application/json',\n                            Accept: 'application/json',\n                            'X-Requested-With': 'XMLHttpRequest',\n                            'X-XSRF-TOKEN': Cookies.get('XSRF-TOKEN')\n                        })\n                    })\n                        .then((response) => response.json()).then((response) => {\n                        // populate datalist\n                        let listString = '';\n                        let loopValues = resolvePath(response, loopSchema, '');\n                        if (isTraversable(loopValues) && typeof loopValues.forEach == 'function') {\n                            loopValues.forEach((item, index) => {\n                                let actualValue = resolvePath(item, valueSchema, '');\n                                let displayValue = resolvePath(item, displaySchema, '').replace('\\n', ', ');\n                                console.log(displayValue);\n                                if (!datalist.querySelector(`option[data-value=\"${actualValue}\"]`))\n                                    listString += `<option value=\"${displayValue}\" data-value=\"${actualValue}\"></option>`;\n                            });\n                        }\n                        else if (typeof loopValues == 'object') {\n                            for (const [key, value] of Object.entries(loopValues)) {\n                                if (isTraversable(value) && typeof value.forEach == 'function') {\n                                    value.forEach((item, index) => {\n                                        let actualValue = resolvePath(item, valueSchema, '');\n                                        let displayValue = resolvePath(item, displaySchema, '').replace('\\n', ', ');\n                                        if (!datalist.querySelector(`option[data-value=\"${actualValue}\"]`))\n                                            listString += `<option value=\"${key}: ${displayValue}\" data-value='${actualValue}'></option>`;\n                                    });\n                                }\n                            }\n                        }\n                        datalist.innerHTML += listString;\n                        displayInputField.closest('form').classList.add('was-validated');\n                        checkMatch();\n                        return response;\n                    });\n                }\n                catch (error) {\n                    console.log(error);\n                }\n            });\n            if (searchWrapper.hasAttribute('data-prevent-submit')) {\n                const form = searchWrapper.closest('form');\n                form.addEventListener('submit', (e) => {\n                    e.preventDefault();\n                });\n            }\n        });\n    }\n}\nexport default iamSearch;\n"],"names":["snake","str","safeID","resolvePath","object","path","defaultValue","p","isTraversable","o","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","reject","fulfilled","step","e","rejected","result","iamSearch","assetLocation","coreCSS","template","searchWrapper","inputField","valueSchema","displaySchema","loopSchema","datalist","searched","displayInputField","listID","event","search","checkMatch","match","subMatch","searchterm","ajaxURL","signal","Cookies","response","listString","loopValues","item","index","actualValue","displayValue","key","error"],"mappings":"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"}