/*!
  * iamKey v5.5.0
  * Copyright 2022-2024 iamproperty
  */import k from"js-cookie";var g=function(L,i,r,a){function m(c){return c instanceof r?c:new r(function(u){u(c)})}return new(r||(r=Promise))(function(c,u){function b(n){try{f(a.next(n))}catch(p){u(p)}}function v(n){try{f(a.throw(n))}catch(p){u(p)}}function f(n){n.done?c(n.value):m(n.value).then(b,v)}f((a=a.apply(L,i||[])).next())})};window.dataLayer=window.dataLayer||[],window.dataLayer.push({event:"customElementRegistered",element:"Address Lookup"});class $ extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const i=document.body.hasAttribute("data-assets-location")?document.body.getAttribute("data-assets-location"):"/assets",r=document.body.hasAttribute("data-core-css")?document.body.getAttribute("data-core-css"):`${i}/css/core.min.css`,a=document.createElement("template");a.innerHTML=`
    <style>
    @import "${r}";
    :host{margin-bottom:1rem;display:block}input[name=postcode]{border-color:var(--error-border, var(--colour-primary)) !important}div:has(input[name=postcode]) .suffix{border-color:var(--error-border, var(--colour-primary)) !important}.invalid-feedback{display:var(--error-display, none) !important}.optional{display:var(--req-display, inline-block) !important}.pre-filled p{padding-bottom:1rem}.pre-filled button{border:none;background:none;cursor:pointer}/*# sourceMappingURL=assets/css/components/address-lookup.css.map */

    
    ${this.hasAttribute("css")?`@import "${this.getAttribute("css")}";`:""}
    </style>
    <link rel="stylesheet" href="https://kit.fontawesome.com/26fdbf0179.css" crossorigin="anonymous" />
    <div class="wrapper">

      <div class="postcode-lookup">
        <div>
        <label class="mb-2">Search <span class="title text-lowercase"></span> <span class="optional">(Optional)</span>
          <span>
          <input type="text" name="postcode" list="address-lookup__addressess" autocomplete="off" aria-autocomplete="none" placeholder="Postcode" />
          <span class="suffix fa-regular fa-search"></span>
          </span>
          <span class="invalid-feedback">Required Adddress fields missing</span>
        </label>

        </div>
        <button class="btn btn-tertiary switch-to-manual-btn">Or enter address manually</button>
      </div>
      <datalist id="address-lookup__addressess"></datalist>

      <div class="manual-address pb-2 js-hide">
        <slot></slot>
        <button class="btn btn-tertiary switch-to-lookup-btn">Use postcode lookup</button>
      </div>
      <div class="pre-filled pb-2 js-hide">
        <strong class="title text-primary d-block"></strong>
        <p><span class="pre-filled-address"></span><button class="text-primary text-decoration-none ms-1 cursor-pointer"><i class="fa-regular fa-pen-to-square"></i><span class="visually-hidden">Edit</span></button><slot name="prefilled"></slot></p>
      </div>
    </div>
    `,this.shadowRoot.appendChild(a.content.cloneNode(!0))}connectedCallback(){return g(this,void 0,void 0,function*(){this.shadowRoot.querySelector(".wrapper");const i=this.shadowRoot.querySelector('[name="postcode"]'),r=this.shadowRoot.querySelector(".postcode-lookup"),a=this.shadowRoot.querySelector(".manual-address"),m=this.shadowRoot.querySelector(".pre-filled"),c=this.shadowRoot.querySelector("datalist"),u=this.shadowRoot.querySelector(".switch-to-manual-btn"),b=this.shadowRoot.querySelector(".switch-to-lookup-btn"),v=this.hasAttribute("data-title")?this.getAttribute("data-title"):"Property address",f=this.shadowRoot.querySelector(".pre-filled-address + button");Array.from(this.shadowRoot.querySelectorAll(".title")).forEach((t,e)=>{t.innerHTML=v});function n(t){let e=t.shadowRoot.querySelector(".pre-filled-address"),s=!0;e.innerHTML="",Array.from(t.querySelectorAll("input[required],input[data-required],select[required],select[data-required]")).forEach((l,d)=>{const o=l.value;o?e.innerHTML+=o+(/^-?\d+$/.test(o)?" ":", "):s=!1}),e.innerHTML=e.innerHTML.slice(0,-2),s&&(m.classList.remove("js-hide"),r.classList.add("js-hide"),a.classList.add("js-hide"))}if(n(this),this.addEventListener("filled",t=>{n(this)}),this.hasAttribute("data-use")){let e=`<div><input type="checkbox" name="use" id="use" value="yes"><label for="use">${this.hasAttribute("data-use-label")?this.getAttribute("data-use-label"):"Use saved address"}</label></div>`;r.insertAdjacentHTML("afterbegin",e),this.shadowRoot.addEventListener("change",s=>{if(s&&s.target instanceof HTMLElement&&s.target.closest('[name="use"]')&&s.target.closest('[name="use"]').checked){r.classList.add("js-hide"),a.classList.remove("js-hide");let d=JSON.parse(this.getAttribute("data-use"));Object.keys(d).forEach((o,A)=>{let h=d[o];this.querySelector(`[data-name="${o}"]`)?this.querySelector(`[data-name="${o}"]`).value=h:this.querySelector(`[name="${o}"]`)&&(this.querySelector(`[name="${o}"]`).value=h)})}})}function p(){r.classList.add("js-hide"),a.classList.remove("js-hide"),Array.from(a.querySelectorAll("[data-required]")).forEach((t,e)=>{t.setAttribute("required","true")}),a.scrollIntoView()}f.addEventListener("click",t=>{m.classList.add("js-hide"),p()}),u.addEventListener("click",t=>{p()}),b.addEventListener("click",t=>{r.classList.remove("js-hide"),a.classList.add("js-hide"),r.scrollIntoView()}),i.addEventListener("keyup",t=>{i.value.length>=3&&S(i.value)}),i.addEventListener("change",t=>{if(i.value.length>=3&&(S(i.value),c.querySelector(`[value="${i.value}"]`))){r.classList.add("js-hide"),a.classList.remove("js-hide");let e=JSON.parse(c.querySelector(`[value="${i.value}"]`).getAttribute("data-values"));Object.keys(e).forEach((s,l)=>{let d=e[s];this.querySelector(`[data-name="${s}"]`)?this.querySelector(`[data-name="${s}"]`).value=d:this.querySelector(`[name="${s}"]`)&&(this.querySelector(`[name="${s}"]`).value=d)}),this.querySelector('[data-name="address_1"]').focus(),Array.from(this.querySelectorAll("[data-required]")).forEach((s,l)=>{s.setAttribute("required","true")}),i.removeAttribute("required"),this.shadowRoot.querySelector('[name="use"]')&&(this.shadowRoot.querySelector('[name="use"]').checked=!1)}});const S=t=>g(this,void 0,void 0,function*(){let e=this.getAttribute("data-url");e+=`${encodeURI(t)}`,window.controller||(window.controller=[]),window.controller[e]&&window.controller[e].abort(),window.controller[e]=new AbortController;const{signal:s}=controller[e];try{yield fetch(e,{signal:s,method:"get",credentials:"same-origin",headers:new Headers({"Content-Type":"application/json",Accept:"application/json","X-Requested-With":"XMLHttpRequest","X-XSRF-TOKEN":k.get("XSRF-TOKEN")})}).then(l=>l.json()).then(l=>{let d="";return l.forEach((o,A)=>{if(typeof o.value=="object"){let h=JSON.stringify(o.value);d+=`<option value="${o.label}, ${t}" data-values='${h}'></option>`}else{let h=JSON.stringify(o),y="";for(const[w,q]of Object.entries(o))w=="address_number_name"?y+=`${q} `:w!="postcode"&&w!="address_title"&&(y+=`${q}${/^-?\d+$/.test(q)?"":","} `);d+=`<option value="${y}${t}" data-values='${h}'></option>`}}),c.innerHTML=d,l})}catch(l){console.log(l)}})})}}export{$ as default};
//# sourceMappingURL=address-lookup.component.min.js.map
